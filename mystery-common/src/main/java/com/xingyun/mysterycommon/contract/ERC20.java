package com.xingyun.mysterycommon.contract;

import io.reactivex.Flowable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class ERC20 extends Contract {
    public static final String BINARY = "60806040526000805460ff191690556005805460a060020a60ff02191690553480156200002b57600080fd5b506200003f6401000000006200006b810204565b6200005264010000000062000124810204565b620000656401000000006200027b810204565b620003ed565b60005460ff1615620000de57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b6004805433600160a060020a031991821681179092556005805482169055600680548216905560006002819055600880549092169092179055805460ff19166001179055565b600454600160a060020a031633146200019e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6f6e6c794f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60055474010000000000000000000000000000000000000000900460ff16156200022957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f616c726561647920706175736564000000000000000000000000000000000000604482015290519081900360640190fd5b6005805460a060020a60ff021916740100000000000000000000000000000000000000001790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b604080517f454950373132446f6d61696e28737472696e67206e616d652c6164647265737381527f20766572696679696e67436f6e7472616374290000000000000000000000000060208083019190915282519182900360330182208284018452600b8084527f42696e616e63652055534400000000000000000000000000000000000000000092840192835293519093909182918083835b60208310620003355780518252601f19909201916020918201910162000314565b51815160209384036101000a60001901801990921691161790526040805192909401829003822082820197909752818401969096523060608083019190915283518083039091018152608090910192839052805190959294508493509185019190508083835b60208310620003bc5780518252601f1990920191602091820191016200039b565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120600c55505050565b61338f80620003fd6000396000f3006080604052600436106101ed5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166303acb44881146101f257806306fdde0314610209578063095ea7b3146102935780630a91b601146102cb57806318160ddd146102fc5780631b6705611461032357806321ab11f71461050757806323b872dd146105805780632ff79161146105aa578063313ce567146105bf5780633f4ba83a146105ea57806345c8b1a6146105ff5780634e71e0c81461062057806352875bc3146106355780635c975abb1461065657806370a082311461066b5780638129fc1c1461068c5780638456cb59146106a1578063893d20e8146106b657806389f72c21146106cb5780638ceed9cb146106ec5780638d1fdf2f1461070d5780638da5cb5b1461072e57806395d89b411461074357806397d60d561461075857806398e52f9a14610779578063a7d87ed014610791578063a9059cbb146107b2578063ac69275c146107d6578063b5ed298a146107f7578063b921e16314610818578063c4f62fee14610830578063d153b60c14610845578063d990c6181461085a578063dd62ed3e1461087b578063e2f72f03146108a2578063e306f779146108c3578063e5839836146108d8578063e7ba1012146108f9578063ebc93aaf1461090e575b600080fd5b3480156101fe57600080fd5b50610207610923565b005b34801561021557600080fd5b5061021e610a74565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610258578181015183820152602001610240565b50505050905090810190601f1680156102855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029f57600080fd5b506102b7600160a060020a0360043516602435610aab565b604080519115158252519081900360200190f35b3480156102d757600080fd5b506102e0610be2565b60408051600160a060020a039092168252519081900360200190f35b34801561030857600080fd5b50610311610bf1565b60408051918252519081900360200190f35b34801561032f57600080fd5b50604080516020600480358082013583810280860185019096528085526102b795369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610bf79650505050505050565b34801561051357600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102b794369492936024939284019190819084018382808284375094975050600160a060020a0385351695505050602083013592604081013592506060810135915060800135610e34565b34801561058c57600080fd5b506102b7600160a060020a0360043581169060243516604435610f10565b3480156105b657600080fd5b5061020761124b565b3480156105cb57600080fd5b506105d46113b9565b6040805160ff9092168252519081900360200190f35b3480156105f657600080fd5b506102076113be565b34801561060b57600080fd5b50610207600160a060020a03600435166114ba565b34801561062c57600080fd5b506102076115d7565b34801561064157600080fd5b50610207600160a060020a036004351661169d565b34801561066257600080fd5b506102b76117f8565b34801561067757600080fd5b50610311600160a060020a0360043516611808565b34801561069857600080fd5b50610207611823565b3480156106ad57600080fd5b506102076118c4565b3480156106c257600080fd5b506102e06119c5565b3480156106d757600080fd5b50610311600160a060020a03600435166119d4565b3480156106f857600080fd5b50610207600160a060020a03600435166119ef565b34801561071957600080fd5b50610207600160a060020a0360043516611aea565b34801561073a57600080fd5b506102e0611c09565b34801561074f57600080fd5b5061021e611c18565b34801561076457600080fd5b50610207600160a060020a0360043516611c4f565b34801561078557600080fd5b506102b7600435611d18565b34801561079d57600080fd5b506102b7600160a060020a0360043516611ec7565b3480156107be57600080fd5b506102b7600160a060020a0360043516602435611ee5565b3480156107e257600080fd5b50610207600160a060020a036004351661211a565b34801561080357600080fd5b50610207600160a060020a0360043516612239565b34801561082457600080fd5b506102b76004356123c7565b34801561083c57600080fd5b506102e0612502565b34801561085157600080fd5b506102e0612511565b34801561086657600080fd5b50610207600160a060020a0360043516612520565b34801561088757600080fd5b50610311600160a060020a036004358116906024351661263d565b3480156108ae57600080fd5b50610207600160a060020a0360043516612668565b3480156108cf57600080fd5b50610311612819565b3480156108e457600080fd5b506102b7600160a060020a036004351661281f565b34801561090557600080fd5b506102e061283d565b34801561091a57600080fd5b5061020761284c565b600554600090600160a060020a03163314806109495750600454600160a060020a031633145b151561099f576040805160e560020a62461bcd02815260206004820152601b60248201527f6f6e6c792070726f706f7365644f776e6572206f72206f776e65720000000000604482015290519081900360640190fd5b600554600160a060020a03161515610a27576040805160e560020a62461bcd02815260206004820152603b60248201527f63616e206f6e6c792064697372656761726420612070726f706f736564206f7760448201527f6e65722074686174207761732070726576696f75736c79207365740000000000606482015290519081900360840190fd5b5060058054600160a060020a03198116909155604051600160a060020a039091169081907f24f4590b0077912a4db89e7430de7986175c27bede1b47ee039e3b421c2e798e90600090a250565b60408051808201909152600b81527f42696e616e636520555344000000000000000000000000000000000000000000602082015281565b60055460009060a060020a900460ff1615610afe576040805160e560020a62461bcd02815260206004820152600d6024820152600080516020613304833981519152604482015290519081900360640190fd5b600160a060020a03831660009081526007602052604090205460ff16158015610b3757503360009081526007602052604090205460ff16155b1515610b7b576040805160e560020a62461bcd02815260206004820152600e60248201526000805160206132e4833981519152604482015290519081900360640190fd5b336000818152600360209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b600654600160a060020a031681565b60025490565b60008088518a51148015610c0c575087518a51145b8015610c19575086518a51145b8015610c26575085518a51145b1515610c7c576040805160e560020a62461bcd02815260206004820152600f60248201527f6c656e677468206d69736d617463680000000000000000000000000000000000604482015290519081900360640190fd5b84518a51148015610c8e575083518a51145b8015610c9b575082518a51145b1515610cf1576040805160e560020a62461bcd02815260206004820152600f60248201527f6c656e677468206d69736d617463680000000000000000000000000000000000604482015290519081900360640190fd5b5060005b8951811015610e2457610dc68a82815181101515610d0f57fe5b906020019060200201518a83815181101515610d2757fe5b906020019060200201518a84815181101515610d3f57fe5b906020019060200201518a85815181101515610d5757fe5b906020019060200201518a86815181101515610d6f57fe5b906020019060200201518a87815181101515610d8757fe5b906020019060200201518a88815181101515610d9f57fe5b906020019060200201518a89815181101515610db757fe5b90602001906020020151612926565b1515610e1c576040805160e560020a62461bcd02815260206004820152600f60248201527f6661696c6564207472616e736665720000000000000000000000000000000000604482015290519081900360640190fd5b600101610cf5565b5060019998505050505050505050565b60008060008089516041141515610e95576040805160e560020a62461bcd02815260206004820152601f60248201527f7369676e61747572652073686f756c642068617665206c656e67746820363500604482015290519081900360640190fd5b50505060208701516040880151606089015160001a610eba8383838c8c8c8c8c612926565b1515610e24576040805160e560020a62461bcd02815260206004820152600f60248201527f6661696c6564207472616e736665720000000000000000000000000000000000604482015290519081900360640190fd5b60055460009060a060020a900460ff1615610f63576040805160e560020a62461bcd02815260206004820152600d6024820152600080516020613304833981519152604482015290519081900360640190fd5b600160a060020a0383161515610fc3576040805160e560020a62461bcd02815260206004820152601f60248201527f63616e6e6f74207472616e7366657220746f2061646472657373207a65726f00604482015290519081900360640190fd5b600160a060020a03831660009081526007602052604090205460ff161580156110055750600160a060020a03841660009081526007602052604090205460ff16155b801561102157503360009081526007602052604090205460ff16155b1515611065576040805160e560020a62461bcd02815260206004820152600e60248201526000805160206132e4833981519152604482015290519081900360640190fd5b600160a060020a0384166000908152600160205260409020548211156110d5576040805160e560020a62461bcd02815260206004820152601260248201527f696e73756666696369656e742066756e64730000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0384166000908152600360209081526040808320338452909152902054821115611150576040805160e560020a62461bcd02815260206004820152601660248201527f696e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015290519081900360640190fd5b600160a060020a038416600090815260016020526040902054611179908363ffffffff6132b316565b600160a060020a0380861660009081526001602052604080822093909355908516815220546111ae908363ffffffff6132ca16565b600160a060020a0380851660009081526001602090815260408083209490945591871681526003825282812033825290915220546111f2908363ffffffff6132b316565b600160a060020a0380861660008181526003602090815260408083203384528252918290209490945580518681529051928716939192600080516020613324833981519152929181900390910190a35060019392505050565b604080517f454950373132446f6d61696e28737472696e67206e616d652c6164647265737381527f20766572696679696e67436f6e7472616374290000000000000000000000000060208083019190915282519182900360330182208284018452600b8084527f42696e616e63652055534400000000000000000000000000000000000000000092840192835293519093909182918083835b602083106113035780518252601f1990920191602091820191016112e4565b51815160209384036101000a60001901801990921691161790526040805192909401829003822082820197909752818401969096523060608083019190915283518083039091018152608090910192839052805190959294508493509185019190508083835b602083106113885780518252601f199092019160209182019101611369565b5181516020939093036101000a60001901801990911692169190911790526040519201829003909120600c55505050565b601281565b600454600160a060020a0316331461140e576040805160e560020a62461bcd0281526020600482015260096024820152600080516020613344833981519152604482015290519081900360640190fd5b60055460a060020a900460ff161515611471576040805160e560020a62461bcd02815260206004820152601060248201527f616c726561647920756e70617573656400000000000000000000000000000000604482015290519081900360640190fd5b6005805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600654600160a060020a0316331461151c576040805160e560020a62461bcd02815260206004820152601760248201527f6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000604482015290519081900360640190fd5b600160a060020a03811660009081526007602052604090205460ff16151561158e576040805160e560020a62461bcd02815260206004820152601860248201527f6164647265737320616c726561647920756e66726f7a656e0000000000000000604482015290519081900360640190fd5b600160a060020a038116600081815260076020526040808220805460ff19169055517fc3776b472ebf54114339eec9e4dc924e7ce307a97f5c1ee72b6d474e6e5e8b7c9190a250565b600554600090600160a060020a0316331461163c576040805160e560020a62461bcd02815260206004820152601160248201527f6f6e6c7950726f706f7365644f776e6572000000000000000000000000000000604482015290519081900360640190fd5b506004805460058054600160a060020a0319808416600160a060020a038381169190911795869055911690915560405191811692169082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600854600160a060020a03163314806116c05750600454600160a060020a031633145b1515611716576040805160e560020a62461bcd02815260206004820152601e60248201527f6f6e6c7920537570706c79436f6e74726f6c6c6572206f72204f776e65720000604482015290519081900360640190fd5b600160a060020a038116151561179c576040805160e560020a62461bcd02815260206004820152602c60248201527f63616e6e6f742073657420737570706c7920636f6e74726f6c6c657220746f2060448201527f61646472657373207a65726f0000000000000000000000000000000000000000606482015290519081900360840190fd5b600854604051600160a060020a038084169216907f40d53b0b666e4424f29d55244e7e171a1dc332acc11d04ed4abd884629d8cc9790600090a360088054600160a060020a031916600160a060020a0392909216919091179055565b60055460a060020a900460ff1681565b600160a060020a031660009081526001602052604090205490565b60005460ff161561187e576040805160e560020a62461bcd02815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b6004805433600160a060020a031991821681179092556005805482169055600680548216905560006002819055600880549092169092179055805460ff19166001179055565b600454600160a060020a03163314611914576040805160e560020a62461bcd0281526020600482015260096024820152600080516020613344833981519152604482015290519081900360640190fd5b60055460a060020a900460ff1615611976576040805160e560020a62461bcd02815260206004820152600e60248201527f616c726561647920706175736564000000000000000000000000000000000000604482015290519081900360640190fd5b6005805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600454600160a060020a031690565b600160a060020a03166000908152600b602052604090205490565b600654600160a060020a0316331480611a125750600454600160a060020a031633145b1515611a8e576040805160e560020a62461bcd02815260206004820152602160248201527f6f6e6c7920617373657450726f74656374696f6e526f6c65206f72204f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600654604051600160a060020a038084169216907fd0c36a0ac0fe0d375386bd568fa2947a2dae7523a0a0cfdab20b7532a105bd1b90600090a360068054600160a060020a031916600160a060020a0392909216919091179055565b600654600160a060020a03163314611b4c576040805160e560020a62461bcd02815260206004820152601760248201527f6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000604482015290519081900360640190fd5b600160a060020a03811660009081526007602052604090205460ff1615611bbd576040805160e560020a62461bcd02815260206004820152601660248201527f6164647265737320616c72656164792066726f7a656e00000000000000000000604482015290519081900360640190fd5b600160a060020a038116600081815260076020526040808220805460ff19166001179055517f90811a8edd3b3c17eeaefffc17f639cc69145d41a359c9843994dc25382036909190a250565b600454600160a060020a031681565b60408051808201909152600481527f4255534400000000000000000000000000000000000000000000000000000000602082015281565b600954600160a060020a0316331480611c725750600454600160a060020a031633145b1515611cc8576040805160e560020a62461bcd02815260206004820152601960248201527f6f6e6c792057686974656c6973746572206f72204f776e657200000000000000604482015290519081900360640190fd5b60098054600160a060020a031916600160a060020a0383811691821792839055604051919216907f54e20b07412504aee4d17519747ae2f01b9924f7f30059793fe5576c4220a0c390600090a350565b600854600090600160a060020a03163314611d7d576040805160e560020a62461bcd02815260206004820152601460248201527f6f6e6c79537570706c79436f6e74726f6c6c6572000000000000000000000000604482015290519081900360640190fd5b600854600160a060020a0316600090815260016020526040902054821115611def576040805160e560020a62461bcd02815260206004820152601160248201527f6e6f7420656e6f75676820737570706c79000000000000000000000000000000604482015290519081900360640190fd5b600854600160a060020a0316600090815260016020526040902054611e1a908363ffffffff6132b316565b600854600160a060020a0316600090815260016020526040902055600254611e48908363ffffffff6132b316565b600255600854604080518481529051600160a060020a03909216917f1b7e18241beced0d7f41fbab1ea8ed468732edbcb74ec4420151654ca71c8a639181900360200190a2600854604080518481529051600092600160a060020a031691600080516020613324833981519152919081900360200190a3506001919050565b600160a060020a03166000908152600a602052604090205460ff1690565b60055460009060a060020a900460ff1615611f38576040805160e560020a62461bcd02815260206004820152600d6024820152600080516020613304833981519152604482015290519081900360640190fd5b600160a060020a0383161515611f98576040805160e560020a62461bcd02815260206004820152601f60248201527f63616e6e6f74207472616e7366657220746f2061646472657373207a65726f00604482015290519081900360640190fd5b600160a060020a03831660009081526007602052604090205460ff16158015611fd157503360009081526007602052604090205460ff16155b1515612015576040805160e560020a62461bcd02815260206004820152600e60248201526000805160206132e4833981519152604482015290519081900360640190fd5b3360009081526001602052604090205482111561207c576040805160e560020a62461bcd02815260206004820152601260248201527f696e73756666696369656e742066756e64730000000000000000000000000000604482015290519081900360640190fd5b3360009081526001602052604090205461209c908363ffffffff6132b316565b3360009081526001602052604080822092909255600160a060020a038516815220546120ce908363ffffffff6132ca16565b600160a060020a0384166000818152600160209081526040918290209390935580518581529051919233926000805160206133248339815191529281900390910190a350600192915050565b600954600160a060020a0316331461217c576040805160e560020a62461bcd02815260206004820152601b60248201527f6f6e6c794265746144656c656761746557686974656c69737465720000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600a602052604090205460ff16156121ed576040805160e560020a62461bcd02815260206004820152601c60248201527f64656c656761746520616c72656164792077686974656c697374656400000000604482015290519081900360640190fd5b600160a060020a0381166000818152600a6020526040808220805460ff19166001179055517f8a22e0d8ecb02260464e9a55b7d82b17482735ae1f765de59dee573dfec5b36d9190a250565b600454600160a060020a03163314612289576040805160e560020a62461bcd0281526020600482015260096024820152600080516020613344833981519152604482015290519081900360640190fd5b600160a060020a038116151561230f576040805160e560020a62461bcd02815260206004820152602960248201527f63616e6e6f74207472616e73666572206f776e65727368697020746f2061646460448201527f72657373207a65726f0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33600160a060020a0382161415612370576040805160e560020a62461bcd02815260206004820152601760248201527f63616c6c657220616c7265616479206973206f776e6572000000000000000000604482015290519081900360640190fd5b60058054600160a060020a031916600160a060020a038381169190911791829055600454604051928216929116907ff4e75b79500ab730f8a026ed3cba6d55331bcb64c9e9f60c548e371356e5e3c090600090a350565b600854600090600160a060020a0316331461242c576040805160e560020a62461bcd02815260206004820152601460248201527f6f6e6c79537570706c79436f6e74726f6c6c6572000000000000000000000000604482015290519081900360640190fd5b60025461243f908363ffffffff6132ca16565b600255600854600160a060020a031660009081526001602052604090205461246d908363ffffffff6132ca16565b60088054600160a060020a03908116600090815260016020908152604091829020949094559154825186815292519116927ff5c174d57843e57fea3c649fdde37f015ef08750759cbee88060390566a98797928290030190a2600854604080518481529051600160a060020a0390921691600091600080516020613324833981519152919081900360200190a3506001919050565b600954600160a060020a031681565b600554600160a060020a031681565b600954600160a060020a03163314612582576040805160e560020a62461bcd02815260206004820152601b60248201527f6f6e6c794265746144656c656761746557686974656c69737465720000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600a602052604090205460ff1615156125f4576040805160e560020a62461bcd02815260206004820152601860248201527f64656c6567617465206e6f742077686974656c69737465640000000000000000604482015290519081900360640190fd5b600160a060020a0381166000818152600a6020526040808220805460ff19169055517f12acb305bec2ecc1e4568decc9c8e0423749ceb6ae249eaef4ef375ec174a49c9190a250565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205490565b600654600090600160a060020a031633146126cd576040805160e560020a62461bcd02815260206004820152601760248201527f6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000604482015290519081900360640190fd5b600160a060020a03821660009081526007602052604090205460ff16151561273f576040805160e560020a62461bcd02815260206004820152601560248201527f61646472657373206973206e6f742066726f7a656e0000000000000000000000604482015290519081900360640190fd5b50600160a060020a03811660009081526001602052604081208054919055600254612770908263ffffffff6132b316565b600255604051600160a060020a038316907ffc5960f1c5a5d2b60f031bf534af053b1bf7d9881989afaeb8b1d164db23aede90600090a2604080518281529051600160a060020a038416917f1b7e18241beced0d7f41fbab1ea8ed468732edbcb74ec4420151654ca71c8a63919081900360200190a2604080518281529051600091600160a060020a038516916000805160206133248339815191529181900360200190a35050565b600c5481565b600160a060020a031660009081526007602052604090205460ff1690565b600854600160a060020a031681565b600454600090600160a060020a0316331461289f576040805160e560020a62461bcd0281526020600482015260096024820152600080516020613344833981519152604482015290519081900360640190fd5b5030600090815260016020526040808220805490839055600454600160a060020a031683529120546128d7908263ffffffff6132ca16565b60048054600160a060020a03908116600090815260016020908152604091829020949094559154825185815292519116923092600080516020613324833981519152929081900390910190a350565b60055460009081908190819060a060020a900460ff161561297f576040805160e560020a62461bcd02815260206004820152600d6024820152600080516020613304833981519152604482015290519081900360640190fd5b336000908152600a602052604090205460ff161515612a0e576040805160e560020a62461bcd02815260206004820152602f60248201527f426574612066656174757265206f6e6c7920616363657074732077686974656c60448201527f69737465642064656c6567617465730000000000000000000000000000000000606482015290519081900360840190fd5b6000881180612a1d5750600087115b1515612a99576040805160e560020a62461bcd02815260206004820152602960248201527f63616e6e6f74207472616e73666572207a65726f20746f6b656e73207769746860448201527f207a65726f206665650000000000000000000000000000000000000000000000606482015290519081900360840190fd5b43851015612af1576040805160e560020a62461bcd02815260206004820152601360248201527f7472616e73616374696f6e206578706972656400000000000000000000000000604482015290519081900360640190fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08b1115612b69576040805160e560020a62461bcd02815260206004820152601360248201527f7369676e617475726520696e636f727265637400000000000000000000000000604482015290519081900360640190fd5b8960ff16601b1480612b7e57508960ff16601c145b1515612bd4576040805160e560020a62461bcd02815260206004820152601360248201527f7369676e617475726520696e636f727265637400000000000000000000000000604482015290519081900360640190fd5b604080517f4265746144656c6567617465645472616e73666572286164647265737320746f81527f2c75696e743235362076616c75652c75696e74323536206665652c75696e74326020808301919091527f3536207365712c75696e7432353620646561646c696e6529000000000000000082840152825191829003605801822082820152600160a060020a038c1682840152606082018b9052608082018a905260a0820189905260c08083018990528351808403909101815260e090920192839052815191929182918401908083835b60208310612cc45780518252601f199092019160209182019101612ca5565b51815160209384036101000a600019018019909216911617905260408051929094018290038220828501855260028084527f1901000000000000000000000000000000000000000000000000000000000000848401908152600c549651929b509397509495508994910192508291908083835b60208310612d565780518252601f199092019160209182019101612d37565b51815160209384036101000a6000190180199092169116179052920194855250838101929092525060408051808403830181529281019081905282519293509182918401908083835b60208310612dbe5780518252601f199092019160209182019101612d9f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506001828b8e8e604051600081526020016040526040518085600019166000191681526020018460ff1660ff168152602001836000191660001916815260200182600019166000191681526020019450505050506020604051602081039080840390855afa158015612e62573d6000803e3d6000fd5b5050604051601f190151915050600160a060020a0381161515612ef5576040805160e560020a62461bcd02815260206004820152602d60248201527f6572726f722064657465726d696e696e672066726f6d2061646472657373206660448201527f726f6d207369676e617475726500000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0389161515612f55576040805160e560020a62461bcd02815260206004820152601660248201527f63616e6e6f207573652061646472657373207a65726f00000000000000000000604482015290519081900360640190fd5b600160a060020a03891660009081526007602052604090205460ff16158015612f975750600160a060020a03811660009081526007602052604090205460ff16155b8015612fb357503360009081526007602052604090205460ff16155b1515612ff7576040805160e560020a62461bcd02815260206004820152600e60248201526000805160206132e4833981519152604482015290519081900360640190fd5b600160a060020a038116600090815260016020526040902054613020898963ffffffff6132ca16565b1115613076576040805160e560020a62461bcd02815260206004820152601060248201527f696e737566666963656e742066756e6400000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600b602052604090205486146130e5576040805160e560020a62461bcd02815260206004820152600d60248201527f696e636f72726563742073657100000000000000000000000000000000000000604482015290519081900360640190fd5b600160a060020a0381166000908152600b602052604090205461310f90600163ffffffff6132ca16565b600160a060020a0382166000908152600b602052604090205561316061313b898963ffffffff6132ca16565b600160a060020a0383166000908152600160205260409020549063ffffffff6132b316565b600160a060020a03821660009081526001602052604090205586156131e3573360009081526001602052604090205461319f908863ffffffff6132ca16565b336000818152600160209081526040918290209390935580518a815290519192600160a060020a038516926000805160206133248339815191529281900390910190a35b600160a060020a03891660009081526001602052604090205461320c908963ffffffff6132ca16565b600160a060020a03808b166000818152600160209081526040918290209490945580518c8152905191939285169260008051602061332483398151915292918290030190a360408051898152602081018890528082018990529051600160a060020a03808c1692908416917fe526c2818be85606ab8e0ea3f317c198ef15baabbb4430bcf2d836eed3c7769b9181900360600190a35060019b9a5050505050505050505050565b600080838311156132c357600080fd5b5050900390565b6000828201838110156132dc57600080fd5b93925050505600616464726573732066726f7a656e0000000000000000000000000000000000007768656e4e6f7450617573656400000000000000000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6f6e6c794f776e65720000000000000000000000000000000000000000000000a165627a7a72305820a77cbe90d6afb8bae9d00e304892d0c613e2678c1f936947ac5fc6560a8bebe60029\n";

    public static final String FUNC_DISREGARDPROPOSEOWNER = "disregardProposeOwner";

    public static final String FUNC_NAME = "name";

    public static final String FUNC_APPROVE = "approve";

    public static final String FUNC_ASSETPROTECTIONROLE = "assetProtectionRole";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_BETADELEGATEDTRANSFERBATCH = "betaDelegatedTransferBatch";

    public static final String FUNC_BETADELEGATEDTRANSFER = "betaDelegatedTransfer";

    public static final String FUNC_TRANSFERFROM = "transferFrom";

    public static final String FUNC_INITIALIZEDOMAINSEPARATOR = "initializeDomainSeparator";

    public static final String FUNC_DECIMALS = "decimals";

    public static final String FUNC_UNPAUSE = "unpause";

    public static final String FUNC_UNFREEZE = "unfreeze";

    public static final String FUNC_CLAIMOWNERSHIP = "claimOwnership";

    public static final String FUNC_SETSUPPLYCONTROLLER = "setSupplyController";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_INITIALIZE = "initialize";

    public static final String FUNC_PAUSE = "pause";

    public static final String FUNC_GETOWNER = "getOwner";

    public static final String FUNC_NEXTSEQOF = "nextSeqOf";

    public static final String FUNC_SETASSETPROTECTIONROLE = "setAssetProtectionRole";

    public static final String FUNC_FREEZE = "freeze";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_SYMBOL = "symbol";

    public static final String FUNC_SETBETADELEGATEWHITELISTER = "setBetaDelegateWhitelister";

    public static final String FUNC_DECREASESUPPLY = "decreaseSupply";

    public static final String FUNC_ISWHITELISTEDBETADELEGATE = "isWhitelistedBetaDelegate";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_WHITELISTBETADELEGATE = "whitelistBetaDelegate";

    public static final String FUNC_PROPOSEOWNER = "proposeOwner";

    public static final String FUNC_INCREASESUPPLY = "increaseSupply";

    public static final String FUNC_BETADELEGATEWHITELISTER = "betaDelegateWhitelister";

    public static final String FUNC_PROPOSEDOWNER = "proposedOwner";

    public static final String FUNC_UNWHITELISTBETADELEGATE = "unwhitelistBetaDelegate";

    public static final String FUNC_ALLOWANCE = "allowance";

    public static final String FUNC_WIPEFROZENADDRESS = "wipeFrozenAddress";

    public static final String FUNC_EIP712_DOMAIN_HASH = "EIP712_DOMAIN_HASH";

    public static final String FUNC_ISFROZEN = "isFrozen";

    public static final String FUNC_SUPPLYCONTROLLER = "supplyController";

    public static final String FUNC_RECLAIMBUSD = "reclaimBUSD";

    public static final Event TRANSFER_EVENT = new Event("Transfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPROVAL_EVENT = new Event("Approval", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERPROPOSED_EVENT = new Event("OwnershipTransferProposed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event OWNERSHIPTRANSFERDISREGARDED_EVENT = new Event("OwnershipTransferDisregarded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PAUSE_EVENT = new Event("Pause", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event UNPAUSE_EVENT = new Event("Unpause", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event ADDRESSFROZEN_EVENT = new Event("AddressFrozen", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event ADDRESSUNFROZEN_EVENT = new Event("AddressUnfrozen", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event FROZENADDRESSWIPED_EVENT = new Event("FrozenAddressWiped", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event ASSETPROTECTIONROLESET_EVENT = new Event("AssetProtectionRoleSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event SUPPLYINCREASED_EVENT = new Event("SupplyIncreased", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SUPPLYDECREASED_EVENT = new Event("SupplyDecreased", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event SUPPLYCONTROLLERSET_EVENT = new Event("SupplyControllerSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event BETADELEGATEDTRANSFER_EVENT = new Event("BetaDelegatedTransfer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event BETADELEGATEWHITELISTERSET_EVENT = new Event("BetaDelegateWhitelisterSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event BETADELEGATEWHITELISTED_EVENT = new Event("BetaDelegateWhitelisted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event BETADELEGATEUNWHITELISTED_EVENT = new Event("BetaDelegateUnwhitelisted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected ERC20(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected ERC20(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected ERC20(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected ERC20(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> disregardProposeOwner() {
        final Function function = new Function(
                FUNC_DISREGARDPROPOSEOWNER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> name() {
        final Function function = new Function(FUNC_NAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> approve(String _spender, BigInteger _value) {
        final Function function = new Function(
                FUNC_APPROVE, 
                Arrays.<Type>asList(new Address(160, _spender),
                new Uint256(_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> assetProtectionRole() {
        final Function function = new Function(FUNC_ASSETPROTECTIONROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> totalSupply() {
        final Function function = new Function(FUNC_TOTALSUPPLY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> betaDelegatedTransferBatch(List<byte[]> r, List<byte[]> s, List<BigInteger> v, List<String> to, List<BigInteger> value, List<BigInteger> fee, List<BigInteger> seq, List<BigInteger> deadline) {
        final Function function = new Function(
                FUNC_BETADELEGATEDTRANSFERBATCH, 
                Arrays.<Type>asList(new DynamicArray<Bytes32>(
                        Bytes32.class,
                        org.web3j.abi.Utils.typeMap(r, Bytes32.class)),
                new DynamicArray<Bytes32>(
                        Bytes32.class,
                        org.web3j.abi.Utils.typeMap(s, Bytes32.class)),
                new DynamicArray<Uint8>(
                        Uint8.class,
                        org.web3j.abi.Utils.typeMap(v, Uint8.class)),
                new DynamicArray<Address>(
                        Address.class,
                        org.web3j.abi.Utils.typeMap(to, Address.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(value, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(fee, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(seq, Uint256.class)),
                new DynamicArray<Uint256>(
                        Uint256.class,
                        org.web3j.abi.Utils.typeMap(deadline, Uint256.class))),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> betaDelegatedTransfer(byte[] sig, String to, BigInteger value, BigInteger fee, BigInteger seq, BigInteger deadline) {
        final Function function = new Function(
                FUNC_BETADELEGATEDTRANSFER, 
                Arrays.<Type>asList(new DynamicBytes(sig),
                new Address(160, to),
                new Uint256(value),
                new Uint256(fee),
                new Uint256(seq),
                new Uint256(deadline)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferFrom(String _from, String _to, BigInteger _value) {
        final Function function = new Function(
                FUNC_TRANSFERFROM, 
                Arrays.<Type>asList(new Address(160, _from),
                new Address(160, _to),
                new Uint256(_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> initializeDomainSeparator() {
        final Function function = new Function(
                FUNC_INITIALIZEDOMAINSEPARATOR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> decimals() {
        final Function function = new Function(FUNC_DECIMALS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> unpause() {
        final Function function = new Function(
                FUNC_UNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> unfreeze(String _addr) {
        final Function function = new Function(
                FUNC_UNFREEZE, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> claimOwnership() {
        final Function function = new Function(
                FUNC_CLAIMOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setSupplyController(String _newSupplyController) {
        final Function function = new Function(
                FUNC_SETSUPPLYCONTROLLER, 
                Arrays.<Type>asList(new Address(160, _newSupplyController)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final Function function = new Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> balanceOf(String _addr) {
        final Function function = new Function(FUNC_BALANCEOF, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> initialize() {
        final Function function = new Function(
                FUNC_INITIALIZE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> pause() {
        final Function function = new Function(
                FUNC_PAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getOwner() {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> nextSeqOf(String target) {
        final Function function = new Function(FUNC_NEXTSEQOF, 
                Arrays.<Type>asList(new Address(160, target)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setAssetProtectionRole(String _newAssetProtectionRole) {
        final Function function = new Function(
                FUNC_SETASSETPROTECTIONROLE, 
                Arrays.<Type>asList(new Address(160, _newAssetProtectionRole)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> freeze(String _addr) {
        final Function function = new Function(
                FUNC_FREEZE, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> symbol() {
        final Function function = new Function(FUNC_SYMBOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setBetaDelegateWhitelister(String _newWhitelister) {
        final Function function = new Function(
                FUNC_SETBETADELEGATEWHITELISTER, 
                Arrays.<Type>asList(new Address(160, _newWhitelister)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> decreaseSupply(BigInteger _value) {
        final Function function = new Function(
                FUNC_DECREASESUPPLY, 
                Arrays.<Type>asList(new Uint256(_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> isWhitelistedBetaDelegate(String _addr) {
        final Function function = new Function(FUNC_ISWHITELISTEDBETADELEGATE, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transfer(String _to, BigInteger _value) {
        final Function function = new Function(
                FUNC_TRANSFER, 
                Arrays.<Type>asList(new Address(160, _to),
                new Uint256(_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> whitelistBetaDelegate(String _addr) {
        final Function function = new Function(
                FUNC_WHITELISTBETADELEGATE, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> proposeOwner(String _proposedOwner) {
        final Function function = new Function(
                FUNC_PROPOSEOWNER, 
                Arrays.<Type>asList(new Address(160, _proposedOwner)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> increaseSupply(BigInteger _value) {
        final Function function = new Function(
                FUNC_INCREASESUPPLY, 
                Arrays.<Type>asList(new Uint256(_value)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> betaDelegateWhitelister() {
        final Function function = new Function(FUNC_BETADELEGATEWHITELISTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> proposedOwner() {
        final Function function = new Function(FUNC_PROPOSEDOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> unwhitelistBetaDelegate(String _addr) {
        final Function function = new Function(
                FUNC_UNWHITELISTBETADELEGATE, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> allowance(String _owner, String _spender) {
        final Function function = new Function(FUNC_ALLOWANCE, 
                Arrays.<Type>asList(new Address(160, _owner),
                new Address(160, _spender)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> wipeFrozenAddress(String _addr) {
        final Function function = new Function(
                FUNC_WIPEFROZENADDRESS, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<byte[]> EIP712_DOMAIN_HASH() {
        final Function function = new Function(FUNC_EIP712_DOMAIN_HASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<Boolean> isFrozen(String _addr) {
        final Function function = new Function(FUNC_ISFROZEN, 
                Arrays.<Type>asList(new Address(160, _addr)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> supplyController() {
        final Function function = new Function(FUNC_SUPPLYCONTROLLER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> reclaimBUSD() {
        final Function function = new Function(
                FUNC_RECLAIMBUSD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferEventResponse> transferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferEventResponse> transferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFER_EVENT));
        return transferEventFlowable(filter);
    }

    public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(APPROVAL_EVENT, transactionReceipt);
        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            ApprovalEventResponse typedResponse = new ApprovalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, ApprovalEventResponse>() {
            @Override
            public ApprovalEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(APPROVAL_EVENT, log);
                ApprovalEventResponse typedResponse = new ApprovalEventResponse();
                typedResponse.log = log;
                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApprovalEventResponse> approvalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPROVAL_EVENT));
        return approvalEventFlowable(filter);
    }

    public List<OwnershipTransferProposedEventResponse> getOwnershipTransferProposedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERPROPOSED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferProposedEventResponse> responses = new ArrayList<OwnershipTransferProposedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            OwnershipTransferProposedEventResponse typedResponse = new OwnershipTransferProposedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.currentOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.proposedOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferProposedEventResponse> ownershipTransferProposedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, OwnershipTransferProposedEventResponse>() {
            @Override
            public OwnershipTransferProposedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERPROPOSED_EVENT, log);
                OwnershipTransferProposedEventResponse typedResponse = new OwnershipTransferProposedEventResponse();
                typedResponse.log = log;
                typedResponse.currentOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.proposedOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferProposedEventResponse> ownershipTransferProposedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERPROPOSED_EVENT));
        return ownershipTransferProposedEventFlowable(filter);
    }

    public List<OwnershipTransferDisregardedEventResponse> getOwnershipTransferDisregardedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERDISREGARDED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferDisregardedEventResponse> responses = new ArrayList<OwnershipTransferDisregardedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            OwnershipTransferDisregardedEventResponse typedResponse = new OwnershipTransferDisregardedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldProposedOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferDisregardedEventResponse> ownershipTransferDisregardedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, OwnershipTransferDisregardedEventResponse>() {
            @Override
            public OwnershipTransferDisregardedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERDISREGARDED_EVENT, log);
                OwnershipTransferDisregardedEventResponse typedResponse = new OwnershipTransferDisregardedEventResponse();
                typedResponse.log = log;
                typedResponse.oldProposedOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferDisregardedEventResponse> ownershipTransferDisregardedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERDISREGARDED_EVENT));
        return ownershipTransferDisregardedEventFlowable(filter);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.oldOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<PauseEventResponse> getPauseEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(PAUSE_EVENT, transactionReceipt);
        ArrayList<PauseEventResponse> responses = new ArrayList<PauseEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            PauseEventResponse typedResponse = new PauseEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PauseEventResponse> pauseEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, PauseEventResponse>() {
            @Override
            public PauseEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(PAUSE_EVENT, log);
                PauseEventResponse typedResponse = new PauseEventResponse();
                typedResponse.log = log;
                return typedResponse;
            }
        });
    }

    public Flowable<PauseEventResponse> pauseEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSE_EVENT));
        return pauseEventFlowable(filter);
    }

    public List<UnpauseEventResponse> getUnpauseEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(UNPAUSE_EVENT, transactionReceipt);
        ArrayList<UnpauseEventResponse> responses = new ArrayList<UnpauseEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            UnpauseEventResponse typedResponse = new UnpauseEventResponse();
            typedResponse.log = eventValues.getLog();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<UnpauseEventResponse> unpauseEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, UnpauseEventResponse>() {
            @Override
            public UnpauseEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(UNPAUSE_EVENT, log);
                UnpauseEventResponse typedResponse = new UnpauseEventResponse();
                typedResponse.log = log;
                return typedResponse;
            }
        });
    }

    public Flowable<UnpauseEventResponse> unpauseEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSE_EVENT));
        return unpauseEventFlowable(filter);
    }

    public List<AddressFrozenEventResponse> getAddressFrozenEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ADDRESSFROZEN_EVENT, transactionReceipt);
        ArrayList<AddressFrozenEventResponse> responses = new ArrayList<AddressFrozenEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            AddressFrozenEventResponse typedResponse = new AddressFrozenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddressFrozenEventResponse> addressFrozenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AddressFrozenEventResponse>() {
            @Override
            public AddressFrozenEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ADDRESSFROZEN_EVENT, log);
                AddressFrozenEventResponse typedResponse = new AddressFrozenEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddressFrozenEventResponse> addressFrozenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDRESSFROZEN_EVENT));
        return addressFrozenEventFlowable(filter);
    }

    public List<AddressUnfrozenEventResponse> getAddressUnfrozenEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ADDRESSUNFROZEN_EVENT, transactionReceipt);
        ArrayList<AddressUnfrozenEventResponse> responses = new ArrayList<AddressUnfrozenEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            AddressUnfrozenEventResponse typedResponse = new AddressUnfrozenEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AddressUnfrozenEventResponse> addressUnfrozenEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AddressUnfrozenEventResponse>() {
            @Override
            public AddressUnfrozenEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ADDRESSUNFROZEN_EVENT, log);
                AddressUnfrozenEventResponse typedResponse = new AddressUnfrozenEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AddressUnfrozenEventResponse> addressUnfrozenEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ADDRESSUNFROZEN_EVENT));
        return addressUnfrozenEventFlowable(filter);
    }

    public List<FrozenAddressWipedEventResponse> getFrozenAddressWipedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(FROZENADDRESSWIPED_EVENT, transactionReceipt);
        ArrayList<FrozenAddressWipedEventResponse> responses = new ArrayList<FrozenAddressWipedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            FrozenAddressWipedEventResponse typedResponse = new FrozenAddressWipedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<FrozenAddressWipedEventResponse> frozenAddressWipedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, FrozenAddressWipedEventResponse>() {
            @Override
            public FrozenAddressWipedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(FROZENADDRESSWIPED_EVENT, log);
                FrozenAddressWipedEventResponse typedResponse = new FrozenAddressWipedEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<FrozenAddressWipedEventResponse> frozenAddressWipedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FROZENADDRESSWIPED_EVENT));
        return frozenAddressWipedEventFlowable(filter);
    }

    public List<AssetProtectionRoleSetEventResponse> getAssetProtectionRoleSetEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(ASSETPROTECTIONROLESET_EVENT, transactionReceipt);
        ArrayList<AssetProtectionRoleSetEventResponse> responses = new ArrayList<AssetProtectionRoleSetEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            AssetProtectionRoleSetEventResponse typedResponse = new AssetProtectionRoleSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldAssetProtectionRole = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newAssetProtectionRole = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AssetProtectionRoleSetEventResponse> assetProtectionRoleSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, AssetProtectionRoleSetEventResponse>() {
            @Override
            public AssetProtectionRoleSetEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(ASSETPROTECTIONROLESET_EVENT, log);
                AssetProtectionRoleSetEventResponse typedResponse = new AssetProtectionRoleSetEventResponse();
                typedResponse.log = log;
                typedResponse.oldAssetProtectionRole = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newAssetProtectionRole = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AssetProtectionRoleSetEventResponse> assetProtectionRoleSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ASSETPROTECTIONROLESET_EVENT));
        return assetProtectionRoleSetEventFlowable(filter);
    }

    public List<SupplyIncreasedEventResponse> getSupplyIncreasedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SUPPLYINCREASED_EVENT, transactionReceipt);
        ArrayList<SupplyIncreasedEventResponse> responses = new ArrayList<SupplyIncreasedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SupplyIncreasedEventResponse typedResponse = new SupplyIncreasedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.to = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SupplyIncreasedEventResponse> supplyIncreasedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, SupplyIncreasedEventResponse>() {
            @Override
            public SupplyIncreasedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SUPPLYINCREASED_EVENT, log);
                SupplyIncreasedEventResponse typedResponse = new SupplyIncreasedEventResponse();
                typedResponse.log = log;
                typedResponse.to = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SupplyIncreasedEventResponse> supplyIncreasedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SUPPLYINCREASED_EVENT));
        return supplyIncreasedEventFlowable(filter);
    }

    public List<SupplyDecreasedEventResponse> getSupplyDecreasedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SUPPLYDECREASED_EVENT, transactionReceipt);
        ArrayList<SupplyDecreasedEventResponse> responses = new ArrayList<SupplyDecreasedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SupplyDecreasedEventResponse typedResponse = new SupplyDecreasedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SupplyDecreasedEventResponse> supplyDecreasedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, SupplyDecreasedEventResponse>() {
            @Override
            public SupplyDecreasedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SUPPLYDECREASED_EVENT, log);
                SupplyDecreasedEventResponse typedResponse = new SupplyDecreasedEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SupplyDecreasedEventResponse> supplyDecreasedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SUPPLYDECREASED_EVENT));
        return supplyDecreasedEventFlowable(filter);
    }

    public List<SupplyControllerSetEventResponse> getSupplyControllerSetEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(SUPPLYCONTROLLERSET_EVENT, transactionReceipt);
        ArrayList<SupplyControllerSetEventResponse> responses = new ArrayList<SupplyControllerSetEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            SupplyControllerSetEventResponse typedResponse = new SupplyControllerSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldSupplyController = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newSupplyController = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<SupplyControllerSetEventResponse> supplyControllerSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, SupplyControllerSetEventResponse>() {
            @Override
            public SupplyControllerSetEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(SUPPLYCONTROLLERSET_EVENT, log);
                SupplyControllerSetEventResponse typedResponse = new SupplyControllerSetEventResponse();
                typedResponse.log = log;
                typedResponse.oldSupplyController = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newSupplyController = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<SupplyControllerSetEventResponse> supplyControllerSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SUPPLYCONTROLLERSET_EVENT));
        return supplyControllerSetEventFlowable(filter);
    }

    public List<BetaDelegatedTransferEventResponse> getBetaDelegatedTransferEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(BETADELEGATEDTRANSFER_EVENT, transactionReceipt);
        ArrayList<BetaDelegatedTransferEventResponse> responses = new ArrayList<BetaDelegatedTransferEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            BetaDelegatedTransferEventResponse typedResponse = new BetaDelegatedTransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.seq = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.fee = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BetaDelegatedTransferEventResponse> betaDelegatedTransferEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BetaDelegatedTransferEventResponse>() {
            @Override
            public BetaDelegatedTransferEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(BETADELEGATEDTRANSFER_EVENT, log);
                BetaDelegatedTransferEventResponse typedResponse = new BetaDelegatedTransferEventResponse();
                typedResponse.log = log;
                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.seq = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.fee = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BetaDelegatedTransferEventResponse> betaDelegatedTransferEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BETADELEGATEDTRANSFER_EVENT));
        return betaDelegatedTransferEventFlowable(filter);
    }

    public List<BetaDelegateWhitelisterSetEventResponse> getBetaDelegateWhitelisterSetEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(BETADELEGATEWHITELISTERSET_EVENT, transactionReceipt);
        ArrayList<BetaDelegateWhitelisterSetEventResponse> responses = new ArrayList<BetaDelegateWhitelisterSetEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            BetaDelegateWhitelisterSetEventResponse typedResponse = new BetaDelegateWhitelisterSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldWhitelister = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newWhitelister = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BetaDelegateWhitelisterSetEventResponse> betaDelegateWhitelisterSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BetaDelegateWhitelisterSetEventResponse>() {
            @Override
            public BetaDelegateWhitelisterSetEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(BETADELEGATEWHITELISTERSET_EVENT, log);
                BetaDelegateWhitelisterSetEventResponse typedResponse = new BetaDelegateWhitelisterSetEventResponse();
                typedResponse.log = log;
                typedResponse.oldWhitelister = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newWhitelister = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BetaDelegateWhitelisterSetEventResponse> betaDelegateWhitelisterSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BETADELEGATEWHITELISTERSET_EVENT));
        return betaDelegateWhitelisterSetEventFlowable(filter);
    }

    public List<BetaDelegateWhitelistedEventResponse> getBetaDelegateWhitelistedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(BETADELEGATEWHITELISTED_EVENT, transactionReceipt);
        ArrayList<BetaDelegateWhitelistedEventResponse> responses = new ArrayList<BetaDelegateWhitelistedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            BetaDelegateWhitelistedEventResponse typedResponse = new BetaDelegateWhitelistedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.newDelegate = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BetaDelegateWhitelistedEventResponse> betaDelegateWhitelistedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BetaDelegateWhitelistedEventResponse>() {
            @Override
            public BetaDelegateWhitelistedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(BETADELEGATEWHITELISTED_EVENT, log);
                BetaDelegateWhitelistedEventResponse typedResponse = new BetaDelegateWhitelistedEventResponse();
                typedResponse.log = log;
                typedResponse.newDelegate = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BetaDelegateWhitelistedEventResponse> betaDelegateWhitelistedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BETADELEGATEWHITELISTED_EVENT));
        return betaDelegateWhitelistedEventFlowable(filter);
    }

    public List<BetaDelegateUnwhitelistedEventResponse> getBetaDelegateUnwhitelistedEvents(TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(BETADELEGATEUNWHITELISTED_EVENT, transactionReceipt);
        ArrayList<BetaDelegateUnwhitelistedEventResponse> responses = new ArrayList<BetaDelegateUnwhitelistedEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            BetaDelegateUnwhitelistedEventResponse typedResponse = new BetaDelegateUnwhitelistedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldDelegate = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<BetaDelegateUnwhitelistedEventResponse> betaDelegateUnwhitelistedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, BetaDelegateUnwhitelistedEventResponse>() {
            @Override
            public BetaDelegateUnwhitelistedEventResponse apply(Log log) {
                EventValuesWithLog eventValues = extractEventParametersWithLog(BETADELEGATEUNWHITELISTED_EVENT, log);
                BetaDelegateUnwhitelistedEventResponse typedResponse = new BetaDelegateUnwhitelistedEventResponse();
                typedResponse.log = log;
                typedResponse.oldDelegate = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<BetaDelegateUnwhitelistedEventResponse> betaDelegateUnwhitelistedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(BETADELEGATEUNWHITELISTED_EVENT));
        return betaDelegateUnwhitelistedEventFlowable(filter);
    }

    @Deprecated
    public static ERC20 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new ERC20(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static ERC20 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new ERC20(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static ERC20 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new ERC20(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ERC20 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new ERC20(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<ERC20> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ERC20.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<ERC20> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(ERC20.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ERC20> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ERC20.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<ERC20> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(ERC20.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class TransferEventResponse extends BaseEventResponse {
        public String from;

        public String to;

        public BigInteger value;
    }

    public static class ApprovalEventResponse extends BaseEventResponse {
        public String owner;

        public String spender;

        public BigInteger value;
    }

    public static class OwnershipTransferProposedEventResponse extends BaseEventResponse {
        public String currentOwner;

        public String proposedOwner;
    }

    public static class OwnershipTransferDisregardedEventResponse extends BaseEventResponse {
        public String oldProposedOwner;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String oldOwner;

        public String newOwner;
    }

    public static class PauseEventResponse extends BaseEventResponse {
    }

    public static class UnpauseEventResponse extends BaseEventResponse {
    }

    public static class AddressFrozenEventResponse extends BaseEventResponse {
        public String addr;
    }

    public static class AddressUnfrozenEventResponse extends BaseEventResponse {
        public String addr;
    }

    public static class FrozenAddressWipedEventResponse extends BaseEventResponse {
        public String addr;
    }

    public static class AssetProtectionRoleSetEventResponse extends BaseEventResponse {
        public String oldAssetProtectionRole;

        public String newAssetProtectionRole;
    }

    public static class SupplyIncreasedEventResponse extends BaseEventResponse {
        public String to;

        public BigInteger value;
    }

    public static class SupplyDecreasedEventResponse extends BaseEventResponse {
        public String from;

        public BigInteger value;
    }

    public static class SupplyControllerSetEventResponse extends BaseEventResponse {
        public String oldSupplyController;

        public String newSupplyController;
    }

    public static class BetaDelegatedTransferEventResponse extends BaseEventResponse {
        public String from;

        public String to;

        public BigInteger value;

        public BigInteger seq;

        public BigInteger fee;
    }

    public static class BetaDelegateWhitelisterSetEventResponse extends BaseEventResponse {
        public String oldWhitelister;

        public String newWhitelister;
    }

    public static class BetaDelegateWhitelistedEventResponse extends BaseEventResponse {
        public String newDelegate;
    }

    public static class BetaDelegateUnwhitelistedEventResponse extends BaseEventResponse {
        public String oldDelegate;
    }
}
